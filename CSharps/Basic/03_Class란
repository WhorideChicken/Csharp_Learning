Class는 생성자를 갖습니다.
생성자는 객체 생성과 동시에 호출 되는 함수이며 몇가지 특성이 있습니다.

1. class 이름과 같다
2. 반환 타입을 어떠한것도 입력하면 안됩니다.(Void도 불가)
3. 오버로딩이 가능합니다.

생성자():this{} -> 기본 생성자 호출 후 해당 생성자를 호출 시킵니다.

Class를 활요하면 OOP를 극대화 시킬 수 있습니다.
-은닉성 : 변수 혹은 함수 앞에 접근 제어자를 선언하여 외부에 노출 되면 안되는 중요한 값이나 기능을 제한시킵니다.
-상속성 : 비슷한 성질의 class를 생성 할 때마다 매번 데이터를 관리하는것은 비횰울 적이니 상속을 하여 데이터를 관리합니다.
-다형성 : 상속과 연결되는 속성입니다. 부모 클래스의 함수를 재정의를 하여 다른 동작을 할 수 있습니다.
*함수 앞에 sealed 키워드를 붙이면 해당 함수는 해당 클래스를 상속 받는 클래스는 함수를 재정의 할 수 없습니다.

is 보단 as 키워드를 사용하다
isPlayer = (pram is Player)

Player p = (pram as Player)
-> pram값이 Player 타입이면 p에 할당하고 아니면 null을 할당하여
if(p != null)로 잘못된 값에 접근을 막을 수 있습니다.


*오버 라이딩 : 부모 클래스의 함수를 재정의
*오버 로딩 : 함수 이름은 같으나 매개변수의 개수나 값의 형태를 다르게 선언하는것